name: Release Client Binaries
on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Download Taskfile for ${{ matrix.os }}
        run: |
          if  [ "$RUNNER_OS" == "Windows" ]; then
            echo "Download Taskfile for Windows"
            curl -L -o taskfile.zip https://github.com/go-task/task/releases/download/v3.31.0/task_windows_amd64.zip
            unzip -q taskfile.zip -d .
            mv task.exe /usr/bin/task.exe
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo "Download Taskfile for Linux"
            curl -L -o taskfile.tar.gz https://github.com/go-task/task/releases/download/v3.31.0/task_linux_amd64.tar.gz
            tar -xvf taskfile.tar.gz
            chmod +x task
            sudo mv task /usr/local/bin/
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "Download Taskfile for macOS"
            curl -L -o taskfile.tar.gz  https://github.com/go-task/task/releases/download/v3.31.0/task_darwin_amd64.tar.gz
            tar -xvf taskfile.tar.gz
            chmod +x task
            sudo mv task /usr/local/bin/
          else
            echo "Unknown OS"
            exit 1
          fi
          ls -la
        shell: bash

      - name: Check Taskfile
        run: |
          ls -la
          task --version
          task help
        working-directory: ${{ github.workspace }}/client
        shell: bash

      - name: Install Dependencies
        run: task install
        working-directory: ${{ github.workspace }}/client

      - name: Build App
        run: task build
        working-directory: ${{ github.workspace }}/client

      - name: Create Binaries
        run: task binaries
        working-directory: ${{ github.workspace }}/client

      - name: Rename binary for ${{ matrix.os }}
        run: |
          if  [ "$RUNNER_OS" == "Windows" ]; then
            echo "Rename binary for Windows"
            mv ./dist/TCPChat.exe ./dist/TCPChat-windows-amd64.exe
          elif [ "$RUNNER_OS" == "Linux" ]; then
            echo "Rename binary for Linux"
            mv ./dist/TCPChat ./dist/TCPChat-linux-amd64
          elif [ "$RUNNER_OS" == "macOS" ]; then
            echo "Rename binary for macOS"
            mv ./dist/TCPChat ./dist/TCPChat-darwin-amd64
          else
            echo "Unknown OS"
            exit 1
          fi

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./client/dist

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: ./dist

      - name: Check files
        run: |
          ls -la
          ls -la ./dist

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/*
          name: ${{ github.ref }}
